### This file was generated by Nexus Schema
### Do not make changes to this file directly

type Booking {
  id: String!
}

type ClientErrorInvalidHandle {
  message: String!
}

type ClientErrorInvalidPropertyInput {
  message: String!
}

type ClientErrorPropertyNotExists {
  message: String!
}

type ClientErrorUserNotExists {
  message: String!
}

type createPropertyReturn {
  ClientErrorInvalidHandle: ClientErrorInvalidHandle
  ClientErrorInvalidPropertyInput: ClientErrorInvalidPropertyInput
  ClientErrorUserNotExists: ClientErrorUserNotExists
  Property: Property
  UnknownError: UnknownError
}

type CustomerCharge {
  amount: Int
  card: String
  currency: String
  date: Int
  description: String
  invoiceId: String
  status: String
}

type findAllPropertiesReturn {
  Properties: [Property!]
  UnknownError: UnknownError
}

type findPropertyResult {
  ClientErrorInvalidHandle: ClientErrorInvalidHandle
  ClientErrorPropertyNotExists: ClientErrorPropertyNotExists
  Property: Property
}

type findUserResult {
  ClientErrorInvalidHandle: ClientErrorInvalidHandle
  ClientErrorUserNotExists: ClientErrorUserNotExists
  User: User
}

type Mutation {
  createListing(
    city: String!
    deposit: Int!
    description: String!
    facilities: [String!]!
    hourlyPrice: Int!
    images: [String!]!
    minStayHours: Int!
    minStayWeeks: Int!
    ownerId: String!
    partialSpace: Boolean!
    pickup: Boolean
    rules: [String!]!
    serviceFee: Int!
    size: Int!
    street: String!
    streetNumber: Int!
    zip: Int!
  ): createPropertyReturn!
  createUser: Boolean!
}

type PaymentInformation {
  cardNumber: String
  expiryMonth: Int
  expiryYear: Int
  type: String
}

type Property {
  availabilities: PropertySlot
  bookings: [Booking!]!
  city: String!
  deposit: Int!
  description: String!
  facilities: [String!]!
  hourlyPrice: Int!
  images: [String!]!
  isVerified: Boolean!
  kind: String!
  minStayHours: Int!
  minStayWeeks: Int!
  owner: User
  partialSpace: Boolean!
  pickup: Boolean!
  rules: [String!]!
  serviceFee: Int!
  size: Int!
  street: String!
  streetNumber: Int!
  zip: Int!
}

type PropertySlot {
  id: String!
}

type Query {
  findAllProperties: findAllPropertiesReturn!

  """
  Takes a propertyId and returns the property
  """
  findProperty(id: String): findPropertyResult!

  """
  Takes a handle and returns the user.
  """
  findUser(handle: String): findUserResult!
}

type UnknownError {
  message: String!
}

type User {
  charges: [CustomerCharge!]!
  defaultPayment: PaymentInformation
  email: String!
  fullName: String!
  handle: String!
  id: String!
  paymentMethods: [PaymentInformation!]!
  zip: Int!
}
